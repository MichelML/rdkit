steps:
- bash: |
    sudo apt-get install g++ wget make libgl1-mesa-dev mesa-common-dev
    source ${CONDA}/etc/profile.d/conda.sh
    sudo chown -R ${USER} ${CONDA}
    conda config --set always_yes yes --set changeps1 no
    conda update -q conda
    conda info -a
    conda create --name rdkit_build $(python) cmake \
        boost-cpp=$(boost_version) \
        py-boost=$(boost_version) \
        numpy pillow eigen pandas=2.0 matplotlib-base=3.7 \
        qt=5.9.7 cairo
    conda activate rdkit_build
    conda install -c conda-forge pytest nbval ipykernel>=6.0
  displayName: Setup build environment
- bash: |
    source ${CONDA}/etc/profile.d/conda.sh
    conda activate rdkit_build
    DOCKER_BUILDKIT=1 docker build --no-cache --platform=linux/amd64 -f Code/MinimalLib/ci.Dockerfile . 
  displayName: Configure build (Run CMake)
- bash: |
    source ${CONDA}/etc/profile.d/conda.sh
    conda activate rdkit_build
    cd build
    make -j $( $(number_of_cores) ) install
  displayName: Build
- bash: |
    source ${CONDA}/etc/profile.d/conda.sh
    conda activate rdkit_build
    export RDBASE=`pwd`
    export PYTHONPATH=${RDBASE}:${PYTHONPATH}
    export LD_LIBRARY_PATH=${RDBASE}/lib:${CONDA_PREFIX}/lib:${LD_LIBRARY_PATH}
    echo "LD_LIBRARY_PATH: " $LD_LIBRARY_PATH
    export QT_QPA_PLATFORM='offscreen'
    cd build
    ctest -j $( $(number_of_cores) ) --output-on-failure -T Test
  displayName: Run tests
- bash: |
    source ${CONDA}/etc/profile.d/conda.sh
    conda activate rdkit_build
    conda install -c conda-forge ipython=8.12 sphinx myst-parser
    export RDBASE=`pwd`
    export PYTHONPATH=${RDBASE}:${PYTHONPATH}
    export LD_LIBRARY_PATH=${RDBASE}/lib:${LD_LIBRARY_PATH}
    export QT_QPA_PLATFORM='offscreen'
    cd Docs/Book
    make doctest
  displayName: Run documentation tests
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'CTest'
    testResultsFiles: 'build/Testing/*/Test.xml'
    testRunTitle: $(system.phasedisplayname) CTest Test Run
